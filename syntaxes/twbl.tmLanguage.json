{
	"name": "aTabLang",
	"scopeName": "source.twbl",
	"patterns": [
		{ "include": "#strings" },
		{ "include": "#numbers" },
		{ "include": "#operators" },
		{ "include": "#comments" },
		{ "include": "#fields" },
		{ "include": "#function" },
		{ "include": "#functions-date" },
		{ "include": "#functions-text" },
		{ "include": "#functions-number" },
		{ "include": "#functions-lod" },
		{ "include": "#functions-tablecalc" },
		{ "include": "#functions-aggregate" },
		{ "include": "#logics" }
	],
	"repository": {
		"expression": {
			"patterns": [
				{ "include": "#function" },
				{ "include": "#paren-expression" }
			]
		},
		"strings": {
			"patterns": [
				{
					"match": "\\'[^\\']*\\'",
					"name": "string.quoted.single.twbl"
				},
				{
					"match": "\\\"[^\\\"]*\\\"",
					"name": "string.quoted.double.twbl"
				}
			]
		},
		"fields": {
			"patterns": [
				{
					"match": "[\\[].*?[\\])]",	
					"name": "support.function.other.variable.twbl"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"match": "\\b(\\-?)?(\\d+(?:\\.\\d+)?|0[\\d]+)\\b",
					"name": "constant.character.escape.twbl"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "\/\/.",
					"end": ".+$",
					"name": "comment.double-slash.twbl"
				}
			]
		},
		"functions-date": {
			"match": "\\b(DATE|DATEADD|DATEDIFF|DATENAME|DATEPARSE|DATEPART|DATETIME|DATETRUNC|DAY|ISDATE|ISOQUARTER|ISOWEEK|ISOWEEKDAY|ISOYEAR|MAKEDATE|MAKEDATETIME|MAKETIME|MONTH|NOW|Quarter|TODAY|WEEK|YEAR)\\b",
			"name": "keyword.functions.twbl"
		},
		"functions-text": {
			"match": "\\b(ASCII|CHAR|CONTAINS|ENDSWITH|FIND|FINDNTH|LEFT|LEN|LOWER|LTRIM|MAX|MID|MIN|PROPER|REPLACE|RIGHT|RTRIM|SPACE|SPLIT|STARTSWITH|STR|TRIM|UPPER)\\b",
			"name": "keyword.functions.twbl"
		},
		"functions-number": {
			"match": "\\b(ABS|ACOS|ASIN|ATAN|ATAN2|CEILING|COT|DEGREES|DIV|EXP|FLOOR|HEXBINX|HEXBINY|LN|LOG|MAX|MIN|PI|POWER|RADIANS|ROUND|SIGN|SIN|SQRT|SQUARE|TAN|ZN)\\b",
			"name": "entity.name.function.method.ahk2"
		},
		"functions-lod": {
			"match": "\\b(FIXED|INCLUDE|EXCLUDE)\\b",
			"name": "keyword.control.twbl"
		},
		"functions-tablecalc": {
			"match": "\\b(FIRST|INDEX|LAST|LOOKUP|MODEL_EXTENSION_BOOL|MODEL_EXTENSION_INT|MODEL_EXTENSION_REAL|MODEL_EXTENSION_STRING|MODEL_PERCENTILE|MODEL_QUANTILE|PREVIOUS_VALUE|RANK|RANK_DENSE|RANK_MODIFIED|RANK_PERCENTILE|RANK_UNIQUE|RUNNING_AVG|RUNNING_COUNT|RUNNING_MAX|RUNNING_MIN|RUNNING_SUM|SIZE|SCRIPT_BOOL|SCRIPT_INT|SCRIPT_REAL|SCRIPT_STR|TOTAL|WINDOW_AVG|WINDOW_CORR|WINDOW_COUNT|WINDOW_COVAR|WINDOW_COVARP|WINDOW_MEDIAN|WINDOW_MAX|WINDOW_MIN|WINDOW_PERCENTILE|WINDOW_STDEV|WINDOW_STDEVP|WINDOW_VAR|WINDOW_VARP)\\b",
			"name": "keyword.functions.twbl"
		},
		"functions-aggregate": {
			"match": "\\b(ATTR|INDEX|AVG|COLLECT|CORR|COUNT|COUNTD|COVAR|COVARP|MAX|MEDIAN|MIN|PERCENTILE|STDEV|STDEVP|SUM|VAR|VARP)\\b",
			"name": "entity.other.attribute-name.twbl"
		},
		"logics": {
			"match": "\\bAND|IF|ELSEIF|ELSE|THEN|WHILE|CASE|END|IN|WHEN|NOT|OR\\b",
			"name": "keyword.functions.twbl"
		},
		"operators": {
			"match": "\\b\\=|\\+|\\-|\\>|\\<|\\=|\\%|\\\\|\\*|\\!=|TRUE|FALSE\\b",
			"name": "keyword.control.twbl"
		},
		"paren-expression": {
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": { "0": { "name": "punctuation.paren.beginning" } },
			"endCaptures": { "0": { "name": "punctuation.paren.close" } },
			"name": "keyword.language.twbl",
			"patterns": [ { "include": "#logics" } ]
		}
	}
}
